name: docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  detect-changed-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: .github/workflows/docker.yml
          json: true

      - name: Get changed dirs
        id: changed-dirs
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          dir_names: true
          dir_names_max_depth: '1'
          files_ignore: |
            README.md
            .github/**
          json: true

      - name: List changed dirs and files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          ANY_CHANGED_FILES: ${{ steps.changed-files.outputs.any_changed }}
          ALL_CHANGED_DIRS: ${{ steps.changed-dirs.outputs.all_changed_files }}
        run: |
          echo "Changed Files: ${ANY_CHANGED_FILES} - ${ALL_CHANGED_FILES}"
          echo "Changed Dirs: ${ALL_CHANGED_DIRS}"
    outputs:
      any_changed_files: ${{ steps.changed-files.outputs.any_changed }}
      all_changed_dirs: ${{ steps.changed-dirs.outputs.all_changed_files }}

  build:
    runs-on: ubuntu-latest
    needs: [detect-changed-files]
    strategy:
      matrix:
        dirs: ${{ fromJson(needs.detect-changed-files.outputs.all_changed_dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dirs }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          # push: true
          tags: vimalpaliwal/tinyurl-mcp-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print image content
        run: |
          docker container run --rm vimalpaliwal/tinyurl-mcp-server:latest ls -la && ls -la .venv/bin/
