name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  detect-changed-dirs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: .github/workflows/ci.yml

      - name: Get all mcp dirs
        if: steps.changed-files.outputs.any_changed == 'true'
        id: all-dirs
        run: |
          ALL_DIRS=("$(ls -d */ | tr -d '/')")
          ALL_DIRS_JSON="$(printf '%s\n' "${ALL_DIRS[@]}" | jq -R . | jq -sc .)"

          echo "all_changed_dirs=${ALL_DIRS_JSON}" >> $GITHUB_OUTPUT

      - name: Get changed dirs
        if: steps.changed-files.outputs.any_changed == 'false'
        id: changed-dirs
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          dir_names: true
          dir_names_max_depth: '1'
          files_ignore: |
            README.md
            .github/**
          json: true
          matrix: true

      - name: List changed dirs
        id: list-changed-dirs
        env:
          ALL_CHANGED_DIRS: ${{ steps.changed-files.outputs.any_changed && steps.all-dirs.outputs.all_changed_dirs || steps.changed-dirs.outputs.all_changed_files }}
        run: |
          echo "Changed Dirs: ${ALL_CHANGED_DIRS}"

          echo "all_changed_dirs=${ALL_CHANGED_DIRS}" >> $GITHUB_OUTPUT
    outputs:
      all_changed_dirs: ${{ steps.list-changed-dirs.outputs.all_changed_dirs }}

  image-build-and-test:
    runs-on: ubuntu-latest
    needs: [detect-changed-dirs]
    strategy:
      matrix:
        dirs: ${{ fromJson(needs.detect-changed-dirs.outputs.all_changed_dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dirs }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dirs }}
          file: ${{ matrix.dirs }}/Dockerfile
          push: false
          load: true
          tags: vimalpaliwal/tinyurl-mcp-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test image
        run: |
          docker container run --rm vimalpaliwal/tinyurl-mcp-server:latest python -c "import tinyurl_mcp_server; print('Docker image works')"

  pypi-publish-test:
    runs-on: ubuntu-latest
    needs: [detect-changed-dirs]
    environment:
      name: test
      url: https://pypi.org/p/tinyurl-mcp
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        dirs: ${{ fromJson(needs.detect-changed-dirs.outputs.all_changed_dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dirs }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build package distributions
        run: uv build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
